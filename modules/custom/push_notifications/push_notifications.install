<?php

/**
 * @file
 * Install files for Push Notifications module.
 */

/*
 * Implements hook_install().
 */
function push_notifications_install() {
  // Generate a random ending for APNS certificates once.
  push_notifications_set_random_certificate_string();
}

/**
 * Implements hook_field_schema().
 */
function push_notifications_schema() {
  $schema = array();

  $schema['push_notifications_tokens'] = array(
    'description' => 'Stores device tokens',
    'fields' => array(
      'id' => array(
        'description' => t('Push Notification auto-increment ID.'),
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'token' => array(
        'description' => 'Device Token',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'User ID',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'Network Type (APNS, GCM, etc.)',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'timestamp' => array(
        'description' => 'Timestamp token was added',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'language' => array(
        'description' => 'Language',
        'type' => 'varchar',
        'length' => 11,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('id'),
    'indexes' => array(
      'timestamp' => array('timestamp'),
      'token' => array('token'),
      'type' => array('type'),
      'language' => array('language'),
      'token_uid' => array('token', 'uid'),
    ),
  );

  return $schema;
}
